// kernel is the function to reference with id, in order to compile and execute it
#pragma kernel PaintTexture

// set it with cs.SetTexture
RWTexture2D<float4> TextureToTransform; // texture on which shader will operate, RandomWrite is enable to modify it

// set it with cs.SetVector
float4 ColorToPaint; // color the pixels will be set to

// set it with cs.SetInts
uint2 PixelCoordApplyPoint; // origin from where we apply offset to determine the pixel to modify

uint2 NumberPixelToChange; // represent how many pixel will be set on x and y, to apply negative offset, and center the painting on origin

[numthreads(8,8,1)]
void PaintTexture(uint3 id : SV_DispatchThreadID) // SV_DispatchThreadID is a semantic meaning that it will return the exact thread id 
{
    uint width, height;
    TextureToTransform.GetDimensions(width, height);
    uint2 pixelToChangeColor = PixelCoordApplyPoint;
    pixelToChangeColor.x += id.x - (NumberPixelToChange.x / 2);
    pixelToChangeColor.y += id.y - (NumberPixelToChange.y / 2);
    
    TextureToTransform[pixelToChangeColor] = ColorToPaint;
}
